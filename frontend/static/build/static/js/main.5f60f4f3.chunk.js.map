{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["endpoint","App","props","state","chats","addChats","bind","editChat","removeChat","fetch","then","res","json","result","console","log","setState","error","chat","this","push","orgCaption","updatedText","id","index","indexOf","text","method","headers","body","JSON","stringify","response","ok","Error","data","catch","finally","splice","Fragment","ChatList","Component","ChatForm","user","handleInput","handleSubmit","event","target","name","value","preventDefault","className","onSubmit","type","onChange","placeholder","required","htmlFor","ChatItem","isEditing","handleInputEdit","handleEdit","keyCode","onKeyUp","onClick","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f60f4f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst endpoint = '/api/v1/chatapp/chat/'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chats: [],\n    }\n    this.addChats = this.addChats.bind(this);\n    this.editChat = this.editChat.bind(this);\n    this.removeChat =\n    this.removeChat.bind(this);\n  }\n    componentDidMount() {\n        fetch(`${endpoint}`)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              console.log('response', result)\n              this.setState({\n                chats: result\n              });\n            },\n            (error) => {\n              this.setState({\n                error\n              });\n            }\n          )\n      }\naddChats(chat){\n  const chats = [...this.state.chats]\n  chats.push(chat);\n  this.setState({ chats })\n  }\neditChat(orgCaption, updatedText, id){\n  const chats = [...this.state.chats]\n  const index = chats.indexOf(orgCaption);\n  chats[index].text = updatedText;\n  this.setState({ chats })\n  const text = orgCaption.text\n  console.log(\"CHATS\", {text}, \"ID\", id);\n  fetch(`${endpoint}update/${id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type':'application/json',\n        },\n        body: JSON.stringify({text: text}),\n      })\n        .then(response => {\n        if(!response.ok){\n          throw new Error ('Bad Post request');\n        }\n        return response.json()\n        })\n      .then(data => console.log('Success. Message created!'))\n      .catch(error => console.log('Error:', error))\n      .finally('I am always going to fire!');\n  };\n\nremoveChat(chat){\n  const chats = [...this.state.chats];\n  const index = chats.indexOf(chat);\n  chats.splice(index, 1);\n  this.setState({ chats });\n  fetch(`${endpoint}remove/${chat.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type':'application/json',\n        },\n        body: JSON.stringify(chats),\n      })\n        .then(response => {\n        if(!response.ok){\n          throw new Error ('Bad Post request');\n        }\n        return response.json()\n        })\n      .then(data => console.log('Success. Message created!'))\n      .catch(error => console.log('Error:', error))\n      .finally('I am always going to fire!');\n  };\n\n  render(){\n    return(\n      <React.Fragment>\n      <ChatForm addChats={this.addChats}/>\n    <ChatList chats={this.state.chats} editChat={this.editChat}  removeChat={this.removeChat}/>\n      </React.Fragment>\n    );\n  }\n}\n\nclass ChatForm extends Component {\n  constructor(props){\n  super(props);\n  this.state = {\n    text: '',\n    user: '',\n  }\n  this.handleInput = this.handleInput.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n}\nhandleInput(event){\n  this.setState({ [event.target.name]: event.target.value });\n}\n\n  handleSubmit(event){\n    event.preventDefault();\n    const chat = {\n      text: this.state.text\n    }\n    console.log('chat', chat)\n    //fetch post\n      fetch(`${endpoint}create/`, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/json',\n            },\n            body: JSON.stringify(chat),\n          })\n            .then(response => {\n            if(!response.ok){\n              throw new Error ('Bad Post request');\n            }\n            return response.json()\n            })\n          .then(data => console.log('Success. Message created!'))\n          .catch(error => console.log('Error:', error))\n          .finally('I am always going to fire!');\n      };\n  render(){\n    return (\n      <>\n      <div className=\"intro\">\n      <p className=\"introP\">Welcome to Chat app\n      </p>\n      <p className=\"rules\"> Please add your username and a message! Once both are added, smash that add button. :)\n      </p>\n       </div>\n      <div className=\"form-div\">\n        <form className=\"form\"onSubmit={this.handleSubmit}><br/>\n          <input type=\"text\" id=\"chat-user\" name=\"user\" value={this.state.user} onChange={this.handleInput} placeholder=\"Username\" required />\n          <label htmlFor=\"chat-user\"></label>\n\n          <input type=\"text\" id=\"chat-text\" name=\"text\" value={this.state.text} onChange={this.handleInput} placeholder=\"Message\" required/>\n          <label htmlFor=\"chat-text\"></label>\n\n          <button type=\"submit\">Add Chat</button>\n        </form>\n     </div>\n     </>\n    )\n  }\n}\nclass ChatItem extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      text: this.props.chat.text,\n    }\n    this.handleInputEdit = this.handleInputEdit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n  handleEdit(event){\n    if(event.keyCode === 13) {\n      this.props.editChat(this.props.chat, this.state.text, this.props.chat.id);\n      this.setState({ isEditing: false })\n    }\n  }\n\n  handleInputEdit(event) {\n  this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n  const chat = this.props.chat;\n    return(\n      <li className = \"chat-item\" >\n      <div className=\"chat-div\">\n      {this.state.isEditing\n        ?\n        <input type=\"text\" name=\"text\"\n        value={this.state.text} onChange={this.handleInputEdit}\n        onKeyUp={this.handleEdit}/>\n        :\n        <p className = \"chat-list-text\" > {chat.text} </p>\n      }\n      {\n        !this.state.isEditing\n        ?\n        <button type=\"button\" onClick={() => this.setState({ isEditing: !this.state.isEditing   })}>Edit</button>\n        :\n        null\n      }\n      <button type=\"button\" onClick={()=> this.props.removeChat(chat)}>Delete</button>\n      </div>\n       </li>\n    )\n  }\n}\n\nfunction ChatList(props) {\n  const chats = props.chats.map((chat, index) => (\n    <ChatItem key={index} chat={chat} editChat={props.editChat} removeChat={props.removeChat}/>\n  ));\n  console.log(props.chats);\n  return(\n    <ul className=\"chat-list\"> { chats }\n    </ul>\n  )\n}\n\nexport default App;\n\n\n///a function Component is a stateless Component\n//class base Component uses state\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}